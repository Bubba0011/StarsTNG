@inherits LayerBase

<style>
	.planet {
		fill: rgb(20,40,40);
	}

	.planet-scanned {
		fill: rgb(40,80,80);
	}

	.planet-occupied {
		fill: rgb(240,0,0);
	}

	.planet-owned {
		fill: rgb(50,240,50);
	}

	.hab-bad {
		fill: red;
	}
	.hab-ok {
		fill: orange;
	}
	.hab-good {
		fill: yellow;
	}
	.hab-great {
		fill: green;
	}
</style>

@if (Galaxy != null && IsEnabled)
{
	@foreach (var p in Galaxy.Planets)
	{
		<circle cx="@p.Position.X" cy="@p.Position.Y" r="@GetRadius(2)" class="@GetClass(p)" />
	}
}

@code
{
	[Parameter]
	public bool InStdMode { get; set; } = !true;

	private string GetClass(IPlanet planet)
	{
		return InStdMode
			? GetStdClass()
			: GetValueClass();

		string GetStdClass()
		{
			if (planet.Settlement != null)
			{
				return planet.Settlement.IsMine ? "planet-owned" : "planet-occupied";
			}

			if (planet.Details != null)
			{
				return "planet-scanned";
			}

			return "planet";
		}

		string GetValueClass()
		{
			var planetValue = GameWrapper.Client.Player.GetPlanetValue(planet);

			if (planetValue == null)
			{
				return "planet";
			}
			else if (planetValue <= 0)
			{
				return "hab-bad";
			}
			else if (planetValue <= 0.35)
			{
				return "hab-ok";
			}
			else if (planetValue <= 0.70)
			{
				return "hab-good";
			}
			else
			{
				return "hab-great";
			}
		}
	}

	private string GetRadius(double startValue)
	{
		var radius = (startValue / Math.Pow(Zoom, 0.5)).ToString(CultureInfo.InvariantCulture);
		return radius;
	}
}
