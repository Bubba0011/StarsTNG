<style>
	.swig {
		background-color: rgb(20,20,20);
	}
</style>

@if (Galaxy != null)
{
	<SvgBox CssClass="swig" OnClick="TargetObject" FocusOn="@focus">
		<GalaxyBoundingBox Bounds="Galaxy.Bounds" IsFilled="true" />
		<ScannerLayer Galaxy="Galaxy" />
		<GalaxyGrid Galaxy="Galaxy" />
		<GalaxyBoundingBox Bounds="Galaxy.Bounds" IsOutlined="true" />

		<PlanetLayer Galaxy="Galaxy" />
		<FleetLayer Galaxy="Galaxy" />

		<SelectionLayer SelectedObject="SelectedObject"/>

		@ChildContent
	</SvgBox>
}

@code
{
	Focus focus = new Focus() { View = Vector.Zero };

	[Parameter]
	public ISpaceObject SelectedObject { get; set; }

	[Parameter]
	public IGalaxy Galaxy { get; set; }

	[Parameter]
	public RenderFragment ChildContent { get; set; }

	[Parameter]
	public EventCallback<ISpaceObject> SelectedObjectChanged { get; set; }

	private async Task TargetObject(SvgMouseEventArgs e)
	{
		var pos = new Position((int)e.SvgCoords.X, (int)e.SvgCoords.Y);
		var target = Galaxy.ClosestSpaceObject(pos);

		if (target != null)
		{
			if (SelectedObject?.Position == target.Position)
			{
				var objects = Galaxy.GetSpaceObjectsAt(target.Position).ToArray();

				SelectedObject = objects
					.SkipWhile(obj => obj.ObjectId != SelectedObject.ObjectId)
					.Skip(1)
					.FirstOrDefault();
			}
			else
			{
				SelectedObject = target;
			}
		}

		await SelectedObjectChanged.InvokeAsync(SelectedObject);
	}
}
