@inherits PanelBase

@if (Planet != null && IsEnabled)
{
	<div class="small-font">
		@if (Planet.Details != null)
		{
			@if (Planet.Timestamp.HasValue)
			{
				<p><i>(As of turn @Planet.Timestamp)</i></p>
			}

			@if (Player != null)
			{
				<p><b>Value</b> @GetPlanetValue()%</p>
			}

			<div style="width: 250px;">
				<p><b>Environment</b><EnvironmentPanel Environment="@Planet.Details.Environment" /></p>
				<p><b>Minerals</b><MineralsPanel Minerals="Planet.Details.Minerals" /></p>
			</div>
		}
		else
		{
			<i>No information available.</i>
		}

		@if (Planet.Settlement != null)
		{
			<p><b>Owner</b> @GetPlayerName(Planet.Settlement.OwnerId)</p>
			<p><b>Population</b> @Planet.Settlement.Population</p>
			<p><b>Scanner Range</b> @Planet.Settlement.ScannerRange</p>

			@if (Planet.Settlement is ISettlementController controller)
			{
				<p>
					<div><b>Build Queue</b></div>
					<div>
						@foreach (var item in controller.BuildQueue.Items)
						{
							<div>@($"{item.ItemToBuild.Name} - {item.Invested} of {item.Cost} ({100 * item.Progress:0.}%)")</div>
						}
					</div>
					<div>
						<Button Size="ButtonSize.Small" Color="Color.Primary" Clicked="AddScoutToBuildQueue">Add Scout</Button>
						<Button Size="ButtonSize.Small" Color="Color.Primary" Clicked="AddColonyShipToBuildQueue">Add Colonizer</Button>
						<Button Size="ButtonSize.Small" Color="Color.Danger" Clicked="RemoveLastBuildQueueItem" Disabled="@(!controller.BuildQueue.Items.Any())">Remove Last</Button>
					</div>
				</p>
			}
		}
	</div>
}

@code
{
	[Parameter]
	public IPlanet Planet { get; set; }

	private IPlayer Player => GameWrapper.Client.Player;

	private int GetPlanetValue()
	{
		var value = Player.GetPlanetValue(Planet) ?? 0;

		return (int)(100 * value);
	}

	private string GetPlayerName(int playerId)
	{
		var player = GameWrapper.Client.Players.SingleOrDefault(p => p.Id == playerId);
		return player?.Name ?? $"Player #{playerId}";
	}

	private void AddScoutToBuildQueue()
	{
		if (Planet.Settlement is ISettlementController ctrl)
		{
			var scout = new BuildQueueItem(BuildMenuItem.ScoutShip);
			ctrl.BuildQueue.Items.Add(scout);
		}
	}

	private void AddColonyShipToBuildQueue()
	{
		if (Planet.Settlement is ISettlementController ctrl)
		{
			var ship = new BuildQueueItem(BuildMenuItem.ColonyShip);
			ctrl.BuildQueue.Items.Add(ship);
		}
	}

	private void RemoveLastBuildQueueItem()
	{
		if (Planet.Settlement is ISettlementController ctrl)
		{
			var lastItem = ctrl.BuildQueue.Items.Last();
			if (lastItem != null)
			{
				ctrl.BuildQueue.Items.Remove(lastItem);
			}
		}
	}
}
