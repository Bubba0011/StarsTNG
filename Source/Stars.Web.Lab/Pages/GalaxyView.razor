@page "/galaxy"

@inject GameStoreService GameStore

<style>
	.main-container {
		position: relative;
		width: 100%;
		height: 100vh;
	}

	.setup-container {
		margin: 5px;
	}

	.info-panel {
		position: absolute;
		background-color: rgba(40,60,80,0.65);
		color: white;
		border-radius: 3px;
		box-shadow: 0 0 1px 1px rgb(80,120,160);
		padding: 4px;
	}

	.top {
		top: 10px;
	}

	.bottom {
		bottom: 10px;
	}

	.left {
		left: 10px;
	}

	.right {
		right: 10px;
	}

	.small-font {
		font-size: small;
	}
</style>

<div>
	<div class="main-container" id="mejn">
		<UiGalaxy Galaxy="galaxy" @bind-SelectedObject="selectedObject" />

		@if (selectedObject is IPlanet planet)
		{
			<PlanetInfoPanel Planet="planet" IsEnabled="true" />
		}
		else if (selectedObject is IFleet fleet)
		{
			<InfoPanel Position="bottom left">
				@fleet.Name
			</InfoPanel>
		}

		<TurnOrderPanel Game="game" PlayerId="playerId" OnNextTurn="NextTurn" OnNextPlayer="NextPlayer" IsEnabled="true" />
		<GalaxyGenerationPanel OnGenerate="Generate" @bind-Settings="settings" IsEnabled="true" />
		<DevPanel IsEnabled="true" />
	</div>

	@if (errorMessage != null)
	{
		<div style="color: red">@errorMessage</div>
	}
</div>

@code
{
	private GalaxyGeneratorSettings settings = new GalaxyGeneratorSettings() { PlanetCount = 333 };
	private Game game;
	private int playerId;
	private string errorMessage;
	private IGalaxy galaxy;
	private ISpaceObject selectedObject;
	private IPlanet selectedPlanet => selectedObject as IPlanet;

	protected override void OnInitialized()
	{
		Reload();
	}

	private void Generate()
	{
		errorMessage = null;

		try
		{
			game = null;
			Reload();
			StateHasChanged();
		}
		catch (Exception ex)
		{
			errorMessage = "Error: " + ex.Message;
		}
	}

	private void Reload()
	{
		selectedObject = null;

		if (game == null)
		{
			var gameSettings = new GameGeneratorSettings() 
			{ 
				GalaxySettings = settings, 
				PlayerNames = { "Feds", "Borg", "Vorlons" } 
			};
			var gen = new GameGenerator();
			game = gen.Generate(gameSettings);
		}

		this.playerId = game.Galaxy.Players.First().Id;
		this.galaxy = new PlayerGalaxyView(game.Galaxy, playerId);
	}

	private void NextTurn()
	{
		game.Update();
	}

	private void NextPlayer()
	{
		playerId += 1;

		if (playerId > game.Galaxy.Players.Last().Id)
		{
			playerId = game.Galaxy.Players.First().Id;
		}

		galaxy = new PlayerGalaxyView(game.Galaxy, playerId);
		selectedObject = null;
	}
}
